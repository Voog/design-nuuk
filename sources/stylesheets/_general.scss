/* GENERAL */
// Styling rules for the basic parts of the page. These rules affect the entire site.
body {
  margin: 0;
  padding: 0;
  font-family: $primary-font;
  font-weight: 400;
  font-size: 18px;
  line-height: 1.3;
  @include color($primary-color, 1);
  background-position: center;
  background-attachment: fixed;
  background-size: cover;
  min-height: 100vh;
  box-sizing: border-box;
  overflow-x: hidden;

  .editmode & {
    min-height: calc(100vh - 72px);
  }

  &.dark-background {
    @include color($white, 1);
  }
}

// Layout specific body classes.
.front-page {
}

.common-page {
}

.blog-page,
.post-page {
}

.blog-page {
}

.post-page {
}

// Pseudo classes to declare commonly used styling rules for different elements.
%clearfix:after {
  content: "";
  display: table;
  clear: both;
}

%stretch {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

%inline-block {
  display: inline-block;
}

%button {
  margin: 0;
  padding: 0;
  background: none;
  border: none;
  cursor: pointer;

  &:focus {
    outline: none;
  }

  &::-moz-focus-inner {
    padding: 0;
    border: none;
  }
}

// Styling rules for the independent elements that can be located everywhere in the DOM and always have the same look.
.voog-bg-picker-btn,
.bg-picker {
  @extend %button;
  position: absolute;

  .container & {
    top: 68px;
    right: 15px;
  }
}

.background-image,
.background-color {
  position: fixed;
  z-index: -2;

  .container & {
    position: static;
    padding: 40px 20px;
    @include bg($white, 1);

    @include query($tablet-2) {
      padding-top: 1px;
    }
  }
}

.background-image {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-size: cover;
  background-position: center center;
}

.background-color {
  @extend %stretch;
}

// Styling rules for the main container.
.container {
  position: relative;
  max-width: 960px;
  padding: 96px 40px;
  margin: 0 auto;
  width: 100%;
  box-sizing: border-box;

  @include query($tablet-2) {
    padding: 36px 16px
  }

  a {
    text-decoration: none;

    img {
      border: none;
    }
  }
}

.loader {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 999;
  width: 20px;
  height: 20px;
  border-radius: 100%;
  opacity: 0;
  transition: opacity .3s;

  &::before {
    position: absolute;
    display: block;
    width: 100%;
    height: 100%;
    content: '';
    box-sizing: content-box;
  }

  .not-loaded &,
  .is-loaded & {
    margin-top: calc((20px / 2) * -1);
    margin-left: calc((20px / 2) * -1);
    border: 1px solid rgba($black, 0);
    animation: spin 1s infinite linear;

    &::before {
      border-top: 1px solid rgba($black, 1);
      border-right: 1px solid transparent;
      border-bottom: 1px solid transparent;
      border-left: 1px solid transparent;
      border-radius: 100%;
    }
  }

  .not-loaded & {
    opacity: 1;
  }

  .is-loaded & {
    opacity: 0;
  }

  .with-error & {
    width: 30px;
    height: 30px;
    margin-top: -15px;
    margin-left: -15px;
    background-color: rgba($red, .7);
    opacity: 1;

    &::before,
    &::after {
      position: absolute;
      top: 14px;
      width: 22px;
      height: 2px;
      background-color: $white;
      border-radius: 2px;
      content: '';
    }


    &::before {
      left: 4px;
      transform: rotate(45deg);
    }

    &::after{
      right: 4px;
      transform: rotate(-45deg);
    }
  }
}

@keyframes spin {
  from {
      transform:rotate(0deg);
  }
  to {
      transform:rotate(360deg);
  }
}

.svg-spritesheet {
  display: none;
}